@misc{ThetaANL,
  title = "{Argonne Leadership Computing Facility: Theta/ThetaGPU Machine Overview}",
  howpublished = "\url{https://www.alcf.anl.gov/support-center/theta/theta-thetagpu-overview}",
  year = {2021},
  note = {Accessed: 2021-02-28}
}

% pyhf Zenodo
@software{pyhf,
  author = {Lukas Heinrich and Matthew Feickert and Giordon Stark},
  title = "{pyhf: v0.6.0}",
  version = {0.6.0},
  doi = {10.5281/zenodo.1169739},
  url = {https://doi.org/10.5281/zenodo.1169739},
}

% pyhf JOSS
@article{pyhf_joss,
  doi = {10.21105/joss.02823},
  url = {https://doi.org/10.21105/joss.02823},
  year = {2021},
  publisher = {The Open Journal},
  volume = {6},
  number = {58},
  pages = {2823},
  author = {Lukas Heinrich and Matthew Feickert and Giordon Stark and Kyle Cranmer},
  title = {pyhf: pure-Python implementation of HistFactory statistical models},
  journal = {Journal of Open Source Software}
}

% funcX
@inproceedings{funcX_paper,
author = {Chard, Ryan and Babuji, Yadu and Li, Zhuozhao and Skluzacek, Tyler and Woodard, Anna and Blaiszik, Ben and Foster, Ian and Chard, Kyle},
title = {FuncX: A Federated Function Serving Fabric for Science},
year = {2020},
isbn = {9781450370523},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3369583.3392683},
doi = {10.1145/3369583.3392683},
abstract = {Exploding data volumes and velocities, new computational methods and platforms, and ubiquitous connectivity demand new approaches to computation in the sciences. These new approaches must enable computation to be mobile, so that, for example, it can occur near data, be triggered by events (e.g., arrival of new data), be offloaded to specialized accelerators, or run remotely where resources are available. They also require new design approaches in which monolithic applications can be decomposed into smaller components, that may in turn be executed separately and on the most suitable resources. To address these needs we present funcX---a distributed function as a service (FaaS) platform that enables flexible, scalable, and high performance remote function execution. funcX's endpoint software can transform existing clouds, clusters, and supercomputers into function serving systems, while funcX's cloud-hosted service provides transparent, secure, and reliable function execution across a federated ecosystem of endpoints. We motivate the need for funcX with several scientific case studies, present our prototype design and implementation, show optimizations that deliver throughput in excess of 1 million functions per second, and demonstrate, via experiments on two supercomputers, that funcX can scale to more than more than 130 000 concurrent workers.},
booktitle = {Proceedings of the 29th International Symposium on High-Performance Parallel and Distributed Computing},
pages = {65–76},
numpages = {12},
keywords = {federated function serving, function as a service, funcX},
location = {Stockholm, Sweden},
series = {HPDC '20}
}

@techreport{Cranmer:1456844,
      author        = "Cranmer, Kyle and Lewis, George and Moneta, Lorenzo and
                       Shibata, Akira and Verkerke, Wouter",
      title         = "{HistFactory: A tool for creating statistical models for
                       use with RooFit and RooStats}",
      number        = "CERN-OPEN-2012-016",
      month         = "Jan",
      year          = "2012",
      reportNumber  = "CERN-OPEN-2012-016",
      url           = "https://cds.cern.ch/record/1456844",
}

% Uses HistFactory for background
@article{Aaij:2015sqa,
    author = "{LHCb Collaboration}",
    title = "{Dalitz plot analysis of $B^0 \to \overline{D}^0 \pi^+\pi^-$ decays}",
    archivePrefix = "arXiv",
    primaryClass = "hep-ex",
    reportNumber = "CERN-PH-EP-2015-110, LHCB-PAPER-2014-070",
    doi = "10.1103/PhysRevD.92.032002",
    journal = "Phys. Rev. D",
    volume = "92",
    number = "3",
    pages = "032002",
    year = "2015"
}

% SModelS paper
@article{Alguero:2020grj,
    author = {Alguero, Ga\"el and Kraml, Sabine and Waltenberger, Wolfgang},
    title = "{A SModelS interface for pyhf likelihoods}",
    eprint = "2009.01809",
    archivePrefix = "arXiv",
    primaryClass = "hep-ph",
    month = "9",
    year = "2020"
}

@article{Cowan:2010js,
    author = "Cowan, Glen and Cranmer, Kyle and Gross, Eilam and Vitells, Ofer",
    title = "{Asymptotic formulae for likelihood-based tests of new physics}",
    eprint = "1007.1727",
    archivePrefix = "arXiv",
    primaryClass = "physics.data-an",
    doi = "10.1140/epjc/s10052-011-1554-0",
    journal = "Eur. Phys. J. C",
    volume = "71",
    pages = "1554",
    year = "2011",
    note = "[Erratum: Eur.Phys.J.C 73, 2501 (2013)]"
}

@article{Maguire:2017ypu,
      author         = "Maguire, Eamonn and Heinrich, Lukas and Watt, Graeme",
      title          = "{HEPData: a repository for high energy physics data}",
      booktitle      = "{Proceedings, 22nd International Conference on Computing
                        in High Energy and Nuclear Physics (CHEP2016): San
                        Francisco, CA, October 14-16, 2016}",
      journal        = "J. Phys. Conf. Ser.",
      volume         = "898",
      year           = "2017",
      number         = "10",
      pages          = "102006",
      doi            = "10.1088/1742-6596/898/10/102006",
      reportNumber   = "IPPP-17-31",
      SLACcitation   = "%%CITATION = ARXIV:1704.05473;%%"
}

@inproceedings{Parsl_paper,
author = {Babuji, Yadu and Woodard, Anna and Li, Zhuozhao and Katz, Daniel S. and Clifford, Ben and Kumar, Rohan and Lacinski, Lukasz and Chard, Ryan and Wozniak, Justin M. and Foster, Ian and Wilde, Michael and Chard, Kyle},
title = {Parsl: Pervasive Parallel Programming in Python},
year = {2019},
isbn = {9781450366700},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3307681.3325400},
doi = {10.1145/3307681.3325400},
abstract = {High-level programming languages such as Python are increasingly used to provide intuitive interfaces to libraries written in lower-level languages and for assembling applications from various components. This migration towards orchestration rather than implementation, coupled with the growing need for parallel computing (e.g., due to big data and the end of Moore's law), necessitates rethinking how parallelism is expressed in programs. Here, we present Parsl, a parallel scripting library that augments Python with simple, scalable, and flexible constructs for encoding parallelism. These constructs allow Parsl to construct a dynamic dependency graph of components that it can then execute efficiently on one or many processors. Parsl is designed for scalability, with an extensible set of executors tailored to different use cases, such as low-latency, high-throughput, or extreme-scale execution. We show, via experiments on the Blue Waters supercomputer, that Parsl executors can allow Python scripts to execute components with as little as 5 ms of overhead, scale to more than 250000 workers across more than 8000 nodes, and process upward of 1200 tasks per second. Other Parsl features simplify the construction and execution of composite programs by supporting elastic provisioning and scaling of infrastructure, fault-tolerant execution, and integrated wide-area data management. We show that these capabilities satisfy the needs of many-task, interactive, online, and machine learning applications in fields such as biology, cosmology, and materials science.},
booktitle = {Proceedings of the 28th International Symposium on High-Performance Parallel and Distributed Computing},
pages = {25–36},
numpages = {12},
keywords = {parallel programming, python, parsl},
location = {Phoenix, AZ, USA},
series = {HPDC '19}
}

@misc{River_HPC,
  title="{Research Infrastructure to explore Volatility, Energy-efficiency, and Resilience (RIVER):
Usage Models and Resources}",
  howpublished = "\url{http://river.cs.uchicago.edu/website-builder.html}",
  year = {2021},
  note = {Accessed: 2021-02-28}
}

@misc{portable_inference_workshop,
    title = {{Fitting and Statistical Inference as a Service}},
    author = {Matthew Feickert},
    year = {2020},
    month = {Dec},
    note = {{IRIS-HEP Blueprint Workshop on Portable Inference}},
    url = {https://indico.cern.ch/event/972791/contributions/4121109/},
}

@misc{ATLAS_SUSY_1Lbb_pallet,
    author = {{ATLAS Collaboration}},
    title = "{Search for direct production of electroweakinos in final states with one lepton, missing transverse momentum and a Higgs boson decaying into two \(b\)-jets in \(pp\) collisions at \(\sqrt{s} = 13\,\text{TeV}\) with the ATLAS detector}",
    doi = "10.17182/hepdata.90607.v4",
    url = "https://doi.org/10.17182/hepdata.90607.v4",
    year = "2020",
    type = "Data Collection"
}

@misc{ATLAS_SUSY_SS3L_pallet,
    author = {{ATLAS Collaboration}},
    title = "{Search for squarks and gluinos in final states with same-sign leptons and jets using \(139\,\text{fb}^{-1}\) of data collected with the ATLAS detector}",
    doi = "10.17182/hepdata.91214.v4",
    url = "https://doi.org/10.17182/hepdata.91214.v4",
    year = "2020",
    type = "Data Collection"
}

@misc{ATLAS_SUSY_staus_pallet,
    author = {{ATLAS Collaboration}},
    title = "{Search for direct stau production in events with two hadronic \(\tau\)-leptons in \(\sqrt{s} = 13\,\text{TeV}\) \(pp\) collisions with the ATLAS detector}",
    doi = "10.17182/hepdata.92006.v2",
    url = "https://doi.org/10.17182/hepdata.92006.v2",
    year = "2020",
    type = "Data Collection"
}

@software{study_code,
  author = {Lukas Heinrich and Matthew Feickert and Giordon Stark and Ben Galewsky},
  title = "{Distributed Inference with pyhf and funcX}",
  url = {https://github.com/matthewfeickert/distributed-inference-with-pyhf-and-funcX},
}

@software{study_code_zenodo_doi,
  author       = {Lukas Heinrich and
                  Matthew Feickert and
                  Giordon Stark and
                  Ben Galewsky},
  title        = {matthewfeickert/distributed-inference-with-pyhf-and-funcX},
  month        = june,
  year         = 2021,
  publisher    = {Zenodo},
  version      = {vCHEP-2021},
  doi          = {10.5281/zenodo.1234567},
  url          = {https://doi.org/10.5281/zenodo.1234567}
}

% pMSSM paper
@article{Ambrogi:2017lov,
    author = "Ambrogi, Federico and Kraml, Sabine and Kulkarni, Suchita and Laa, Ursula and Lessa, Andre and Waltenberger, Wolfgang",
    title = "{On the coverage of the pMSSM by simplified model results}",
    eprint = "1707.09036",
    archivePrefix = "arXiv",
    primaryClass = "hep-ph",
    reportNumber = "HEPHY-PUB-990-17",
    doi = "10.1140/epjc/s10052-018-5660-0",
    journal = "Eur. Phys. J. C",
    volume = "78",
    number = "3",
    pages = "215",
    year = "2018"
}

@misc{IRIS-HEP:NSF-proposal,
  title="{Institute for Research and Innovation in Software for High Energy Physics (IRIS-HEP)}",
  howpublished = "\url{https://iris-hep.org/assets/pdf/iris-hep-nsf-proposal.pdf}",
  year = {2018},
  note = "{Funding proposal to the National Science Foundation that resulted in Cooperative Agreement OAC-1836650}"
}
